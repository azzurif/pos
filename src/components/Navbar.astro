---
import NavLink from "./NavLink.astro";
import Dropdown from "./Dropdown.tsx";
import TextInput from "./TextInput";

const { pathname } = Astro.url;
const user = Astro.cookies.get("user")?.value;
---

<nav
  class:list={[
    "border-b border-gray-300 py-4 px-8",
    pathname.startsWith("/order") && "w-full md:w-3/4",
  ]}
>
  <div class="flex justify-between items-center">
    <a href="/" class="gap-2 flex items-center h-full">
      <img
        src="/favicon.svg"
        alt="logo"
        class="block h-9 w-auto fill-current text-gray-800 dark:text-gray-200"
      />
      <h1 class="text-lg">
        {import.meta.env.PUBLIC_APP_NAME}
      </h1>
    </a>

    <div class="hidden md:block list-none space-x-4">
      {
        user ? (
          <NavLink
            active={
              pathname.startsWith("/dashboard") ||
              pathname.startsWith("/products") ||
              pathname.startsWith("/categories")
            }
            href="/dashboard"
          >
            Dashboard
          </NavLink>
        ) : null
      }
      <NavLink active={pathname.startsWith("/order")} href="/order"
        >Order</NavLink
      >
    </div>

    <div class="flex items-center gap-2">
      {
        pathname.startsWith("/order") && (
          <div class="flex md:block -ms-[7.5rem] md:-ms-0">
            <TextInput
              id="search-product"
              type="search"
              placeholder="What do you think of Delicious?"
              class:list={[
                "rounded-md transition-all ease-in-out duration-200 delay-75 md:ms-0 md:w-[19rem] md:block",
                // showSearch ? "w-auto ms-0" : "w-0 ms-64"
              ]}
            />
          </div>
        )
      }
      <div class:list={!Astro.cookies.get("user") ? "hidden" : ""}>
        <Dropdown client:load />
      </div>
    </div>
  </div>
</nav>

<script>
  import { navigate } from "astro:transitions/client";

  const search = document.getElementById("search-product");

  search?.addEventListener("keydown", (e: KeyboardEvent) => {
    if (e.key === "Enter") {
      const query = e.currentTarget?.value.trim();
      if (query) {
        navigate(`/order/s/${encodeURIComponent(query)}`);
      }
    }
  });
</script>
